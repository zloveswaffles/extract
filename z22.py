import tkinter as tk
from tkinter import filedialog, messagebox, ttk
from PIL import Image, ImageTk
import tabula
import pdfplumber
import camelot
import pandas as pd
import os
import logging
import sys
import threading
import re
from datetime import datetime
import time
import base64
from io import BytesIO

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# --- Placeholder for your Base64 encoded image string ---
# Replace the string below with your actual Base64 data.
BASE64_IMAGE_DATA = ""
# --- End of placeholder ---

# --- Function to load image from Base64 string (minimal version) ---
def load_base64_image(encoded_string):
    if encoded_string == "YOUR_BASE64_STRING_HERE" or not encoded_string: # Handle placeholder
        logger.warning("Base64 image string is placeholder or empty. Cannot load image.")
        return None
    # Remove potential data URI prefix (e.g., "data:image/png;base64,")
    if "," in encoded_string:
        try:
            header, encoded_string = encoded_string.split(',', 1)
        except ValueError:
            logger.error("Base64 string format error (comma splitting).")
            # messagebox.showerror("Image Error", "Base64 string format error.") # Keeping minimal as requested
            return None
    try:
        image_data = base64.b64decode(encoded_string)
        pil_image = Image.open(BytesIO(image_data))
        return pil_image
    except Exception as e:
        logger.error(f"Failed to load image from Base64 string: {e}")
        return None
# --- End of function ---

# Verify Java/tabula setup
def verify_tabula_java():
    try:
        tabula.environment_info()
        logger.info("Java environment verified successfully.")
    except Exception as e:
        messagebox.showerror("Java Error", f"Ensure Java is installed correctly.\n{str(e)}")
        sys.exit()

# File selection
def select_pdf_file():
    file_path = filedialog.askopenfilename(title="Select PDF", filetypes=[("PDF files", "*.pdf")])
    if not file_path:
        logger.info("No file selected. Exiting.")
        sys.exit()
    logger.info(f"Selected file: {file_path}")
    return file_path

# Extract tables with tabula
def extract_tables_tabula(pdf_path, pages):
    tables = tabula.read_pdf(pdf_path, pages=pages, multiple_tables=True, lattice=True, silent=True)
    dfs = [df.dropna(how='all').reset_index(drop=True) for df in tables if not df.empty]
    return pd.concat(dfs, ignore_index=True) if dfs else pd.DataFrame()

# Extract text data with pdfplumber
def extract_tables_pdfplumber(pdf_path, pages_str): # pages_str "all" or "1,2,3"
    with pdfplumber.open(pdf_path) as pdf:
        actual_max_pages = len(pdf.pages)
        selected_page_indices = []
        if pages_str.lower() == 'all':
            selected_page_indices = range(actual_max_pages)
        else:
            selected_page_indices = parse_page_numbers(pages_str, actual_max_pages) # Expects 0-indexed list

        selected_pages_to_process = [pdf.pages[i] for i in selected_page_indices if 0 <= i < actual_max_pages]
        all_text = []
        for page in selected_pages_to_process:
            text = page.extract_text(x_tolerance=1, y_tolerance=3) # default tolerances, can be tuned
            if text:
                all_text.extend(text.split('\n'))
    return pd.DataFrame({"Extracted Text": all_text})


# Extract tables with camelot
def extract_tables_camelot(pdf_path, pages_str_1_indexed): # pages_str_1_indexed is 'all' or '1,2,5-7'
    logger.info(f"Camelot attempting to process pages: {pages_str_1_indexed}")
    try:
        tables = camelot.read_pdf(pdf_path, pages=pages_str_1_indexed, flavor='stream', suppress_stdout=True)
        dfs = [table.df for table in tables if hasattr(table, 'df') and not table.df.empty]
        return pd.concat(dfs, ignore_index=True) if dfs else pd.DataFrame()
    except Exception as e: # Catch potential errors during Camelot processing
        logger.error(f"Error during Camelot extraction: {e}")
        return pd.DataFrame()


# Parse page numbers (returns 0-indexed list from 1-indexed string like "1,2,5-7")
def parse_page_numbers(pages_input_str, max_pages_available):
    page_nums = set()
    if pages_input_str.lower() == 'all':
        return list(range(max_pages_available))
    
    for part in pages_input_str.split(','):
        part = part.strip()
        if not part: continue
        try:
            if '-' in part:
                start_str, end_str = part.split('-', 1)
                start = int(start_str)
                end = int(end_str)
                if start <= 0 or end <= 0 or start > end:
                    logger.warning(f"Invalid page range (must be positive and start <= end): {part}")
                    continue
                for i in range(start - 1, end): # User inputs 1-indexed, convert to 0-indexed
                    if 0 <= i < max_pages_available:
                        page_nums.add(i)
            else:
                page_num = int(part)
                if page_num <= 0:
                    logger.warning(f"Invalid page number (must be >0): {part}")
                    continue
                if 0 <= (page_num - 1) < max_pages_available: # User inputs 1-indexed
                    page_nums.add(page_num - 1)
        except ValueError:
            logger.warning(f"Invalid page format, skipping: {part}")
            continue
    return sorted(list(page_nums))


# Solve filename conflict
def ensure_unique_filename(filepath):
    base, ext = os.path.splitext(filepath)
    counter = 1
    original_filepath = filepath
    while os.path.exists(filepath):
        filepath = f"{base}_{counter}{ext}"
        counter += 1
    if original_filepath != filepath:
        logger.info(f"Filename conflict: '{original_filepath}' already exists. Saving as '{filepath}'.")
    return filepath

# Clean extracted data
def clean_dataframe(df):
    if df.empty:
        return df
    def clean_cell(cell):
        if isinstance(cell, str):
            cell = cell.replace('$', '').strip()
            if re.match(r'^\(\s*[\d,.]+\s*\)$', cell): # Matches (123), ( 123.45 ), etc.
                cell = '-' + cell.strip('() ').replace(',', '')
            cell = cell.replace('\n', ' ').replace('\r', ' ')
            cell = re.sub(r'\s+', ' ', cell).strip() # Normalize multiple spaces to one
        return cell
    return df.map(clean_cell)


# Run extraction processes and save to one Excel file with separate tabs
def run_extraction(pdf_path, pages_input_str, user_inputs, tk_root): # Added tk_root for clipboard access
    try:
        with pdfplumber.open(pdf_path) as temp_pdf: # Check PDF validity and get page count
            actual_max_pages = len(temp_pdf.pages)
        if actual_max_pages == 0:
            logger.error("PDF file seems to have 0 pages or is unreadable.")
            messagebox.showerror("PDF Error", "PDF file has 0 pages or could not be read properly.")
            return
    except Exception as e:
        logger.error(f"Could not open PDF to determine page count: {e}", exc_info=True)
        messagebox.showerror("PDF Error", f"Could not read PDF file: {e}")
        return

    # Prepare page strings for each library
    # parse_page_numbers returns 0-indexed list
    # For Tabula: needs string 'all' or list of 1-indexed numbers
    # For Camelot: needs string 'all' or comma-separated 1-indexed numbers '1,2,3-5'
    # For PDFPlumber: uses parse_page_numbers (0-indexed list)

    pages_0_indexed_list = parse_page_numbers(pages_input_str, actual_max_pages)

    if not pages_0_indexed_list and pages_input_str.lower() != 'all':
        logger.warning(f"No valid pages parsed from input '{pages_input_str}'. Extraction might yield no results.")
        # Proceed with empty list, libraries should handle this (or we handle their empty DFs)
    
    # Tabula pages: 'all' or list of 1-indexed numbers
    tabula_pages_arg = "all" if pages_input_str.lower() == 'all' else [p + 1 for p in pages_0_indexed_list]
    if not tabula_pages_arg and pages_input_str.lower() != 'all': # If list is empty after parsing
        tabula_pages_arg = [] # Pass empty list if no specific pages are valid, Tabula might handle it or return empty
        logger.warning("Tabula will run with no specific pages (might process all or none).")


    # Camelot pages: 'all' or '1,2,3-5' (1-indexed string)
    camelot_pages_arg = "all" if pages_input_str.lower() == 'all' else ','.join(map(str, [p + 1 for p in pages_0_indexed_list]))
    if not camelot_pages_arg and pages_input_str.lower() != 'all':
         logger.warning("Camelot page string is empty after parsing. Camelot might not run effectively.")
         camelot_pages_arg = "" # Let Camelot decide how to handle an empty page string

    # PDFPlumber uses the pages_input_str directly as its internal logic uses parse_page_numbers too.

    logger.info(f"Running Tabula with pages: {tabula_pages_arg}")
    tabula_df = clean_dataframe(extract_tables_tabula(pdf_path, tabula_pages_arg))
    
    logger.info(f"Running Camelot with pages: {camelot_pages_arg}")
    camelot_df = clean_dataframe(extract_tables_camelot(pdf_path, camelot_pages_arg))

    logger.info(f"Running PDFPlumber with pages: {pages_input_str} (parsed internally)")
    plumber_df = clean_dataframe(extract_tables_pdfplumber(pdf_path, pages_input_str))


    year, period, audit_status, client_name = user_inputs
    base_name = os.path.splitext(os.path.basename(pdf_path))[0]
    output_dir = os.path.dirname(pdf_path)
    filename = f"{year}_{period}_{audit_status}_{client_name}_{base_name}_Combined_Extracted.xlsx"
    output_file = ensure_unique_filename(os.path.join(output_dir, filename))

    excel_has_sheets = False
    with pd.ExcelWriter(output_file, engine='xlsxwriter') as writer:
        if not tabula_df.empty:
            tabula_df.to_excel(writer, sheet_name='Tabula', index=False)
            excel_has_sheets = True
        if not camelot_df.empty:
            camelot_df.to_excel(writer, sheet_name='Camelot', index=False)
            excel_has_sheets = True
        if not plumber_df.empty: # PDFPlumber output is a single column "Extracted Text"
            plumber_df.to_excel(writer, sheet_name='PDFPlumber', index=False)
            excel_has_sheets = True


    # --- Combine text from all dataframes for clipboard ---
    all_text_for_clipboard = []
    all_text_for_clipboard.append("--- Tabula Data ---")
    if not tabula_df.empty:
        all_text_for_clipboard.append(tabula_df.to_string(index=False))
    else:
        all_text_for_clipboard.append("No data extracted by Tabula.")
    all_text_for_clipboard.append("\n\n--- Camelot Data ---")
    if not camelot_df.empty:
        all_text_for_clipboard.append(camelot_df.to_string(index=False))
    else:
        all_text_for_clipboard.append("No data extracted by Camelot.")
    all_text_for_clipboard.append("\n\n--- PDFPlumber Data ---")
    if not plumber_df.empty:
        all_text_for_clipboard.append(plumber_df.to_string(index=False)) # Ensure header is included if desired
    else:
        all_text_for_clipboard.append("No data extracted by PDFPlumber.")
    
    full_clipboard_text = "\n".join(all_text_for_clipboard)
    
    clipboard_success_message = ""
    try:
        tk_root.clipboard_clear()
        tk_root.clipboard_append(full_clipboard_text)
        logger.info("Combined extracted text copied to clipboard.")
        clipboard_success_message = "\n\nExtracted text also copied to clipboard."
    except tk.TclError as e:
        logger.error(f"Failed to copy to clipboard: {e}. Another application might be using the clipboard or text too large.")
        clipboard_success_message = "\n\nCould not copy text to clipboard (possibly too large or clipboard in use)."
    except Exception as e_clip:
        logger.error(f"An unexpected error occurred during clipboard operation: {e_clip}", exc_info=True)
        clipboard_success_message = f"\n\nError copying to clipboard: {e_clip}"
    # --- End of clipboard logic ---

    if excel_has_sheets:
        logger.info(f"Saved combined extracted data to {output_file}")
        messagebox.showinfo("Extraction Complete", f"Data saved to:\n{output_file}{clipboard_success_message}")
    else:
        logger.warning(f"No data extracted. Excel file '{output_file}' was created but is empty.")
        messagebox.showwarning("Extraction Note", f"No data was extracted. The output file '{output_file}' is empty.{clipboard_success_message}")


# Main UI function
def main():
    root = tk.Tk()
    root.title("ZABL")
    window_width, window_height = 500, 500
    screen_width = root.winfo_screenwidth()
    screen_height = root.winfo_screenheight()
    x_coordinate = (screen_width/2) - (window_width/2)
    y_coordinate = (screen_height/2) - (window_height/2)
    root.geometry(f"{window_width}x{window_height}+{int(x_coordinate)}+{int(y_coordinate)}")

    inputs_frame = ttk.Frame(root)
    inputs_frame.pack(pady=10, padx=10, fill='x')


    current_year = datetime.now().year

    client_name_var = tk.StringVar()
    year_var = tk.StringVar(value=str(current_year))
    period_var = tk.StringVar()
    audit_status_var = tk.StringVar()
    pages_var = tk.StringVar(value="") # Changed: Default value for pages is now empty

    ttk.Label(inputs_frame, text="Client Name:").pack(pady=(10,0))
    ttk.Entry(inputs_frame, textvariable=client_name_var, width=40).pack(pady=5, fill='x', padx=5)

    ttk.Label(inputs_frame, text="Year:").pack(pady=(10,0))
    ttk.Combobox(inputs_frame, textvariable=year_var, values=[str(y) for y in range(2010, current_year + 10)], width=37).pack(pady=5, fill='x', padx=5) # Extended year range

    ttk.Label(inputs_frame, text="Period:").pack(pady=(10,0))
    ttk.Combobox(inputs_frame, textvariable=period_var, values=["Annual", "Q1", "Q2", "Q3", "Q4", "Semi-Annual", "Monthly", "Custom"], width=37).pack(pady=5, fill='x', padx=5) # Added more periods

    ttk.Label(inputs_frame, text="Audit Status:").pack(pady=(10,0))
    ttk.Combobox(inputs_frame, textvariable=audit_status_var, values=["Audited", "Reviewed", "Compiled", "Company Prepared", "Draft", "Final"], width=37).pack(pady=5, fill='x', padx=5) # Added more statuses

    ttk.Label(inputs_frame, text="Pages (e.g., 1,2,5-7 or 'all'):").pack(pady=(10,0))
    ttk.Entry(inputs_frame, textvariable=pages_var, width=40).pack(pady=5, fill='x', padx=5)


    def start_extraction_ui_thread():
        pdf_path = select_pdf_file()
        if not pdf_path:
             return

        client_name = client_name_var.get().strip()
        year_val = year_var.get()
        period_val = period_var.get()
        audit_status_val = audit_status_var.get()
        pages_to_extract = pages_var.get().strip().lower() # Standardize to lower for 'all' comparison

        if not all([client_name, year_val, period_val, audit_status_val, pages_to_extract]):
            messagebox.showerror("Input Error", "All fields (Client Name, Year, Period, Audit Status, Pages) are required and cannot be empty.")
            return
        
        user_inputs = (year_val, period_val, audit_status_val, client_name.upper())
        
        try:
            verify_tabula_java()
        except SystemExit:
            return

        load_win = tk.Toplevel(root)
        load_win.title("Extracting...")
        lw_width, lw_height = 350, 200 # Slightly wider for image/text
        main_win_x = root.winfo_x()
        main_win_y = root.winfo_y()
        main_win_width = root.winfo_width()
        main_win_height = root.winfo_height()
        lw_x = main_win_x + (main_win_width // 2) - (lw_width // 2)
        lw_y = main_win_y + (main_win_height // 2) - (lw_height // 2)
        load_win.geometry(f"{lw_width}x{lw_height}+{lw_x}+{lw_y}")
        load_win.grab_set()
        load_win.protocol("WM_DELETE_WINDOW", lambda: None)


        pil_loading_image = load_base64_image(BASE64_IMAGE_DATA)
        if pil_loading_image:
            # Resize if too large for loading window
            max_img_w, max_img_h = 300, 100
            pil_loading_image.thumbnail((max_img_w, max_img_h), Image.Resampling.LANCZOS)
            tk_loading_image = ImageTk.PhotoImage(pil_loading_image)
            label_img = ttk.Label(load_win, image=tk_loading_image)
            label_img.image = tk_loading_image
            label_img.pack(pady=10)
        else:
            ttk.Label(load_win, text="Processing PDF...").pack(pady=20)

        progress_label = ttk.Label(load_win, text="Extraction in progress, please wait...")
        progress_label.pack(pady=(0,5))
        progress = ttk.Progressbar(load_win, mode='indeterminate', length=330)
        progress.pack(pady=(0,10), padx=10)
        progress.start(10)

        def extraction_thread_task():
            try:
                # Pass root to run_extraction for clipboard access
                run_extraction(pdf_path, pages_to_extract, user_inputs, root)
            except Exception as e_thread:
                logger.error(f"Unhandled error in extraction thread: {e_thread}", exc_info=True)
                if load_win.winfo_exists(): # only show messagebox if load_win is still there
                    messagebox.showerror("Critical Extraction Error", f"A critical error occurred: {e_thread}")
            finally:
                if load_win.winfo_exists():
                    progress.stop()
                    load_win.destroy()

        threading.Thread(target=extraction_thread_task, daemon=True).start()

    ttk.Button(root, text="Upload Financial Statement & Extract", command=start_extraction_ui_thread).pack(pady=20)

    root.mainloop()

if __name__ == "__main__":
    main()
#!/usr/bin/env python3
# coding: utf-8

# Standard library imports
import re # For regular expression operations
import sys # For system-specific parameters and functions
from collections import defaultdict
import base64 # For embedding image
from io import BytesIO # For embedding image

# Third-party imports
try:
    import pandas as pd
except ImportError:
    print("--------------------------------------------------------------------")
    print("Error: The 'pandas' library is not installed.")
    print("Please install it by running the following command in your terminal:")
    print("  pip install pandas")
    print("Or, if you are using Anaconda:")
    print("  conda install pandas")
    print("--------------------------------------------------------------------")
    sys.exit(1) 

# GUI imports
import tkinter as tk
from tkinter import ttk, scrolledtext, messagebox, font as tkFont
from PIL import Image, ImageTk # Make sure Pillow is installed

# --- Base64 Encoded Image String ---
# REPLACE THIS PLACEHOLDER with the actual Base64 string of your Michael Caine image
# You can generate this using the 'encode_image.py' script provided earlier.
image_base64_string = """

""" # THIS IS A TINY PLACEHOLDER DOT. YOU MUST REPLACE IT!


# --- Helper Function to Clean Numeric Values ---
def clean_value(value_str):
    """
    Cleans a string representation of a number and converts it to a float.
    Handles currency symbols, commas, parentheses for negative numbers, and 'S' prefix.
    """
    if pd.isna(value_str): return None
    
    text = str(value_str).strip()
    
    text = text.replace('$', '')
    if text.startswith('S '): text = text[2:]
    elif text.startswith('S'): text = text[1:]
    text = text.strip()
    
    if text.startswith('(') and text.endswith(')'): text = '-' + text[1:-1]
    text = text.replace(',', '') 
    if text == '-' or text == '—': return 0.0 # Treat standalone hyphen/em-dash as zero
    
    try:
        # Handle cases like '--123' which can arise from multiple negative signs
        if text.startswith('-') and text.count('-') > 1: text = '-' + text.lstrip('-')
        val = float(text)
        return val
    except ValueError:
        return None # Return None if conversion fails

# --- Standard Concepts Mapping ---
STANDARD_CONCEPTS_MAP_BS = [
    # Assets
    (["cash and cash equivalents"], "Cash and Cash Equivalents", "Assets", "CURRENT_ASSET"),
    (["working cash"], "Working Cash", "Assets", "CURRENT_ASSET"), 
    (["excess cash"], "Excess Cash", "Assets", "CURRENT_ASSET"), 
    (["short-term investments"], "Short-Term Investments", "Assets", "CURRENT_ASSET"), 
    (["receivables", "net"], "Receivables, Net", "Assets", "CURRENT_ASSET"),
    (["contract assets"], "Contract Assets (Current)", "Assets", "CURRENT_ASSET"),
    (["inventories"], "Inventories", "Assets", "CURRENT_ASSET"),
    (["other current assets"], "Other Current Assets", "Assets", "CURRENT_ASSET"),
    (["total current assets"], "Total Current Assets", "Assets", "TOTAL_CURRENT_ASSETS"),
    (["property, plant and equipment", "net"], "Property, Plant and Equipment, Net", "Assets", "NONCURRENT_ASSET"),
    (["goodwill"], "Goodwill", "Assets", "NONCURRENT_ASSET"),
    (["intangible assets", "net"], "Intangible Assets, Net", "Assets", "NONCURRENT_ASSET"),
    (["deferred income taxes"], "Deferred Income Taxes (Assets)", "Assets", "NONCURRENT_ASSET"),
    (["other noncurrent assets"], "Other Noncurrent Assets", "Assets", "NONCURRENT_ASSET"),
    (["assets of businesses held for sale"], "Assets of Businesses Held for Sale", "Assets", "OTHER_ASSET"), 
    (["assets of discontinued operations"], "Assets of Discontinued Operations", "Assets", "OTHER_ASSET"),
    (["total assets"], "Total Assets", "Assets", "TOTAL_ASSETS"),
    
    # Liabilities
    (["accounts payable"], "Accounts Payable", "Liabilities", "CURRENT_LIABILITY"),
    (["salaries, benefits and payroll taxes"], "Salaries, Benefits and Payroll Taxes Payable", "Liabilities", "CURRENT_LIABILITY"),
    (["contract liabilities"], "Contract Liabilities (Current)", "Liabilities", "CURRENT_LIABILITY"),
    (["short-term debt"], "Short-Term Debt", "Liabilities", "CURRENT_LIABILITY"), 
    (["current portion of long-term debt"], "Current Portion of Long-Term Debt", "Liabilities", "CURRENT_LIABILITY"), 
    (["current maturities of long-term debt"], "Current Maturities of Long-Term Debt", "Liabilities", "CURRENT_LIABILITY"),
    (["other current liabilities"], "Other Current Liabilities", "Liabilities", "CURRENT_LIABILITY"),
    (["current liabilities"], "Total Current Liabilities", "Liabilities", "TOTAL_CURRENT_LIABILITIES"), 
    (["total current liabilities"], "Total Current Liabilities", "Liabilities", "TOTAL_CURRENT_LIABILITIES"),
    (["long-term debt, net"], "Long-Term Debt, Net", "Liabilities", "NONCURRENT_LIABILITY"),
    (["long-term debt"], "Long-Term Debt", "Liabilities", "NONCURRENT_LIABILITY"), 
    (["retirement liabilities"], "Retirement Liabilities", "Liabilities", "NONCURRENT_LIABILITY"), 
    (["accrued pension liabilities"], "Accrued Pension Liabilities", "Liabilities", "NONCURRENT_LIABILITY"),
    (["other noncurrent liabilities"], "Other Noncurrent Liabilities", "Liabilities", "NONCURRENT_LIABILITY"),
    (["other long-term liabilities"], "Other Long-Term Liabilities", "Liabilities", "NONCURRENT_LIABILITY"), 
    # This entry MUST be specific enough to win over the one below.
    (["total", "liabilities", "and", "equity"], "Total Liabilities and Equity", "Summary", "TOTAL_LIABILITIES_EQUITY"), 
    (["total", "liabilities", "and", "stockholders", "equity"], "Total Liabilities and Equity", "Summary", "TOTAL_LIABILITIES_EQUITY"),
    (["total liabilities"], "Total Liabilities", "Liabilities", "TOTAL_LIABILITIES"), # General total liabilities
    
    # Equity
    (["common stock"], "Common Stock", "Equity", "EQUITY_ITEM"), 
    (["additional paid-in capital"], "Additional Paid-In Capital", "Equity", "EQUITY_ITEM"),
    (["retained earnings"], "Retained Earnings (Accumulated Deficit)", "Equity", "EQUITY_ITEM"),
    (["unearned esop shares"], "Unearned ESOP Shares", "Equity", "EQUITY_ITEM"), 
    (["accumulated other comprehensive loss"], "Accumulated Other Comprehensive Income (Loss)", "Equity", "EQUITY_ITEM"), 
    (["accumulated other comprehensive income"], "Accumulated Other Comprehensive Income (Loss)", "Equity", "EQUITY_ITEM"), 
    (["noncontrolling interests"], "Noncontrolling Interests in Subsidiary", "Equity", "EQUITY_ITEM"), 
    (["total stockholders’ equity"], "Total Equity", "Equity", "TOTAL_EQUITY"), 
    (["total stockholders' equity"], "Total Equity", "Equity", "TOTAL_EQUITY"), 
    (["total equity"], "Total Equity", "Equity", "TOTAL_EQUITY"), 
]


STANDARD_CONCEPTS_MAP_IS = [ 
    (["net", "sales"], "Net Sales", "Revenue", "REVENUE_ITEM"), 
    (["sales"], "Sales", "Revenue", "REVENUE_ITEM"), 
    (["revenue"], "Revenues", "Revenue", "REVENUE_ITEM"),
    (["total", "revenues"], "Total Revenues", "Revenue", "TOTAL_REVENUE"),
    (["operating", "cost", "of", "sales"], "Operating Cost of Sales", "Cost of Sales", "COGS_ITEM"), 
    (["other", "cost", "of", "sales"], "Other Cost of Sales", "Cost of Sales", "COGS_ITEM"), 
    (["cost", "of", "goods", "sold"], "Cost of Goods Sold", "Cost of Sales", "COGS_ITEM"),
    (["cost", "of", "sales"], "Cost of Sales", "Cost of Sales", "COGS_ITEM"),
    (["gross", "profit"], "Gross Profit", "Profit", "GROSS_PROFIT"),
    (["gross", "margin"], "Gross Margin", "Profit", "GROSS_PROFIT"),
    (["research", "and", "development", "expenses"], "Research and Development Expenses", "Operating Expenses", "OPEX_ITEM"),
    (["selling, general and administrative expenses"], "Selling, General and Administrative Expenses", "Operating Expenses", "OPEX_ITEM"), 
    (["operating", "expenses"], "Total Operating Expenses", "Operating Expenses", "TOTAL_OPEX"),
    (["operating", "income"], "Operating Income (Loss)", "Profit", "OPERATING_INCOME"),
    (["interest", "expense"], "Interest Expense", "Non-Operating", "NON_OP_EXPENSE"),
    (["interest", "income"], "Interest Income", "Non-Operating", "NON_OP_INCOME"),
    (["other non-operating income (expense), net"], "Other Non-Operating Income (Expense), Net", "Non-Operating", "NON_OP_OTHER"), 
    (["other", "income", "expense"], "Other Income (Expense), Net", "Non-Operating", "NON_OP_OTHER"),
    (["earnings", "from", "continuing", "operations", "before", "income", "taxes"], "Earnings From Continuing Operations Before Income Taxes", "Profit", "PRETAX_INCOME"), 
    (["income", "before", "income", "taxes"], "Income Before Income Taxes", "Profit", "PRETAX_INCOME"),
    (["provision", "for", "income", "taxes"], "Provision for Income Taxes", "Taxes", "TAX_ITEM"),
    (["income", "tax", "expense"], "Income Tax Expense", "Taxes", "TAX_ITEM"),
    (["net", "earnings", "from", "continuing", "operations"], "Net Earnings From Continuing Operations", "Profit", "NET_INCOME_CONTINUING"), 
    (["net", "earnings(loss)", "from", "discontinued", "operations"], "Net Earnings (Loss) From Discontinued Operations", "Profit", "NET_INCOME_DISCONTINUED"), 
    (["net", "income"], "Net Income (Loss)", "Profit", "NET_INCOME"),
    (["net", "earnings"], "Net Earnings (Loss)", "Profit", "NET_INCOME"),
    (["dividends"], "Dividends", "Equity Changes", "DIVIDENDS_DECLARED"), 
    (["share", "repurchases"], "Share Repurchases", "Equity Changes", "SHARE_REPURCHASES"),
    (["other", "items", "that", "affect", "re"], "Other Items Affecting Retained Earnings", "Equity Changes", "OTHER_EQUITY_CHANGES"),
    (["earnings", "per", "share", "basic"], "Earnings Per Share - Basic", "EPS", "EPS_BASIC"),
    (["earnings", "per", "share", "diluted"], "Earnings Per Share - Diluted", "EPS", "EPS_DILUTED"),
]

STANDARD_CONCEPTS_MAP_CF = [ 
    (["net income"], "Net Income (Loss)", "Operating Activities", "OPERATING_START"), 
    (["net earnings"], "Net Earnings (Loss)", "Operating Activities", "OPERATING_START"),
    (["depreciation and amortization"], "Depreciation and Amortization", "Operating Activities", "OPERATING_ADJUSTMENT"),
    (["stock-based compensation"], "Stock-Based Compensation", "Operating Activities", "OPERATING_ADJUSTMENT"),
    (["deferred income taxes"], "Deferred Income Taxes (Cash Flow)", "Operating Activities", "OPERATING_ADJUSTMENT"),
    (["accounts receivable"], "Changes in Accounts Receivable", "Operating Activities", "OPERATING_CHANGE_WC"), 
    (["inventories"], "Changes in Inventories", "Operating Activities", "OPERATING_CHANGE_WC"),
    (["accounts payable"], "Changes in Accounts Payable", "Operating Activities", "OPERATING_CHANGE_WC"),
    (["other current assets"], "Changes in Other Current Assets", "Operating Activities", "OPERATING_CHANGE_WC"),
    (["other current liabilities"], "Changes in Other Current Liabilities", "Operating Activities", "OPERATING_CHANGE_WC"),
    (["net cash provided by operating activities"], "Net Cash Provided by (Used for) Operating Activities", "Operating Activities", "TOTAL_OPERATING"),
    (["capital expenditures"], "Capital Expenditures", "Investing Activities", "INVESTING_USE"),
    (["purchases of property, plant and equipment"], "Purchases of Property, Plant and Equipment", "Investing Activities", "INVESTING_USE"),
    (["proceeds from sale of property, plant and equipment"], "Proceeds from Sale of Property, Plant and Equipment", "Investing Activities", "INVESTING_SOURCE"),
    (["acquisitions, net of cash acquired"], "Acquisitions, Net of Cash Acquired", "Investing Activities", "INVESTING_USE"),
    (["net cash used for investing activities"], "Net Cash Used for Investing Activities", "Investing Activities", "TOTAL_INVESTING"),
    (["proceeds from issuance of long-term debt"], "Proceeds from Issuance of Long-Term Debt", "Financing Activities", "FINANCING_SOURCE"),
    (["repayment of long-term debt"], "Repayment of Long-Term Debt", "Financing Activities", "FINANCING_USE"),
    (["dividends paid"], "Dividends Paid", "Financing Activities", "FINANCING_USE"),
    (["repurchase of common stock"], "Repurchase of Common Stock", "Financing Activities", "FINANCING_USE"),
    (["net cash used for financing activities"], "Net Cash Used for Financing Activities", "Financing Activities", "TOTAL_FINANCING"),
    (["effect of exchange rate changes on cash"], "Effect of Exchange Rate Changes on Cash", "Summary Cash Flow", "FX_EFFECT"),
    (["net increase in cash and cash equivalents"], "Net Increase (Decrease) in Cash and Cash Equivalents", "Summary Cash Flow", "NET_CHANGE_CASH"),
    (["cash and cash equivalents at beginning of period"], "Cash and Cash Equivalents at Beginning of Period", "Summary Cash Flow", "BEGIN_CASH"),
    (["cash and cash equivalents at end of period"], "Cash and Cash Equivalents at End of Period", "Summary Cash Flow", "END_CASH"),
]


def map_to_standard_concept_factory(concept_map):
    """Creates a mapping function for a given concept map."""
    def map_to_standard_concept(description, current_section_hint=""):
        desc_cleaned_for_matching = " ".join(str(description).split()).lower()
        original_desc_cleaned_casing = " ".join(str(description).split()) 
        
        desc_lower_with_hint = f"{desc_cleaned_for_matching} ({current_section_hint.lower()})" if current_section_hint else desc_cleaned_for_matching
        
        best_match_score = 0
        best_match_result = (original_desc_cleaned_casing, None, None) 

        # DEBUGGING BLOCK - UNCOMMENT TO TRACE "Total Liabilities and Equity"
        # if "total liabilities and equity" in desc_cleaned_for_matching:
        #     print(f"\nDEBUG MAP: Processing description '{desc_cleaned_for_matching}' for 'Total Liabilities and Equity'")

        for keywords, standard_name, category, sub_group in concept_map:
            keywords = [str(kw).lower() for kw in keywords]
            all_match_with_hint = all(kw in desc_lower_with_hint for kw in keywords)
            current_score_hint = len(keywords) + 0.5 if all_match_with_hint and current_section_hint and any(kw in current_section_hint.lower() for kw in keywords) else (len(keywords) if all_match_with_hint else 0)
            all_match_no_hint = all(kw in desc_cleaned_for_matching for kw in keywords)
            current_score_no_hint = len(keywords) if all_match_no_hint else 0
            current_score = max(current_score_hint, current_score_no_hint)
            
            # DEBUGGING BLOCK
            # if "total liabilities and equity" in desc_cleaned_for_matching:
            #     print(f"DEBUG MAP:  - Trying KWs: {keywords} (for '{standard_name}'), Score: {current_score} (Hint: {current_score_hint}, NoHint: {current_score_no_hint}). Current Best Score: {best_match_score}")

            if current_score > best_match_score:
                best_match_score = current_score
                best_match_result = (standard_name, category, sub_group) 
                # DEBUGGING BLOCK
                # if "total liabilities and equity" in desc_cleaned_for_matching:
                #     print(f"DEBUG MAP:    -> New best match for '{desc_cleaned_for_matching}': {best_match_result} with score {best_match_score}")
            elif current_score == best_match_score and current_score > 0:
                current_best_keywords_len = 0
                for kw_list_check, sn_check, _, _ in concept_map:
                    if sn_check == best_match_result[0]: 
                        current_best_keywords_len = len(kw_list_check)
                        break
                if len(keywords) > current_best_keywords_len:
                    best_match_result = (standard_name, category, sub_group)
                    # DEBUGGING BLOCK
                    # if "total liabilities and equity" in desc_cleaned_for_matching:
                    #     print(f"DEBUG MAP:    --> Tie-break, new best (more keywords): {best_match_result} with score {best_match_score}")

        # DEBUGGING BLOCK
        # if "total liabilities and equity" in desc_cleaned_for_matching:
        #    print(f"DEBUG MAP: Final Best Match for '{desc_cleaned_for_matching}': {best_match_result} with score {best_match_score}\n")
        
        if best_match_score == 0: 
             best_match_result = (original_desc_cleaned_casing, None, None)
        return best_match_result
    return map_to_standard_concept

map_bs_std_concept = map_to_standard_concept_factory(STANDARD_CONCEPTS_MAP_BS)
map_is_std_concept = map_to_standard_concept_factory(STANDARD_CONCEPTS_MAP_IS)
map_cf_std_concept = map_to_standard_concept_factory(STANDARD_CONCEPTS_MAP_CF)

# --- Main Parsing Function ---
def parse_financial_statements(text_data):
    raw_original_lines = text_data.strip().split('\n')
    all_parsed_statements = {}
    original_lines = [line for line in raw_original_lines if not re.match(r"^[A-Za-z\s]+(?:Unnamed:\s*\d+\s*){2,}", line, re.IGNORECASE)]
    global_col_header1, global_col_header2 = "Period 1", "Period 2" 
    global_company_name, global_statement_title, global_currency_note = "Unknown Company", "Financial Statements", "(Amounts in millions)"

    if original_lines:
        first_line_is_content_starter = re.match(r"^(Current\s+)?Assets:?$", original_lines[0].strip(), re.IGNORECASE) or \
                                       any(stmt_kw.lower() in original_lines[0].strip().lower() for stmt_kw in ["balance sheet", "income statement", "cash flow", "operations"])
        if not first_line_is_content_starter and original_lines[0].strip() and not any(title_kw.upper() in original_lines[0].upper() for title_kw in ["INCOME STATEMENTS", "BALANCE SHEETS", "CASH FLOWS"]): 
            global_company_name = original_lines[0].strip()
        
        for i, line in enumerate(original_lines):
            line_s = line.strip()
            if any(kw in line_s.lower() for kw in ["consolidated balance sheet", "consolidated income statement", 
                                                   "consolidated statement of cash flows", "consolidated statement of operations",
                                                   "condensed consolidated balance sheet", "condensed consolidated income statement",
                                                   "condensed consolidated statement of cash flows", "condensed consolidated statement of operations"]):
                global_statement_title = line_s 
                if i + 1 < len(original_lines) and ("in millions" in original_lines[i+1].lower() or "in thousands" in original_lines[i+1].lower()):
                    global_currency_note = original_lines[i+1].strip()
                elif re.search(r"(\(.*?in\s+(?:millions|thousands).*?\))", line_s, re.IGNORECASE):
                    match_currency = re.search(r"(\(.*?in\s+(?:millions|thousands).*?\))", line_s, re.IGNORECASE)
                    if match_currency: global_currency_note = match_currency.group(1)
                break 

    for i, line in enumerate(original_lines):
        line_s = line.strip()
        if re.match(r"^(?:As\s+of\s+)?(?:January|February|March|April|May|June|July|August|September|October|November|December)\s+\d{1,2},?$", line_s, re.IGNORECASE):
            for j in range(i + 1, min(i + 4, len(original_lines))):
                year_line_candidate = original_lines[j].strip()
                if not year_line_candidate: continue 
                years_found = re.findall(r"\b(\d{4})\b", year_line_candidate)
                if len(years_found) >= 2: 
                    global_col_header1, global_col_header2 = years_found[0], years_found[1]
                    break 
            if global_col_header1 != "Period 1": break
    
    statement_sections = defaultdict(list)
    current_statement_type = None
    statement_keywords = {
        "STATEMENTS OF CASH FLOWS": "CashFlowStatement", "STATEMENT OF CASH FLOWS": "CashFlowStatement", "CASH FLOWS": "CashFlowStatement", 
        "STATEMENTS OF OPERATIONS": "IncomeStatement", "STATEMENT OF OPERATIONS": "IncomeStatement", "INCOME STATEMENTS": "IncomeStatement", "INCOME STATEMENT": "IncomeStatement", 
        "BALANCE SHEETS": "BalanceSheet", "BALANCE SHEET": "BalanceSheet", 
        "STATEMENTS OF EARNINGS": "IncomeStatement", "STATEMENT OF EARNINGS": "IncomeStatement",
        "STATEMENTS OF FINANCIAL POSITION": "BalanceSheet", "STATEMENT OF FINANCIAL POSITION": "BalanceSheet",
    }
    section_start_keywords = { "ASSETS": "BalanceSheet", "OPERATING ACTIVITIES": "CashFlowStatement", "REVENUES": "IncomeStatement" }

    for line_idx, line in enumerate(original_lines):
        line_upper_stripped = line.upper().strip()
        if not line_upper_stripped: continue 
        matched_primary_stmt_type = None
        for keyword_base, stmt_type_val in statement_keywords.items():
            if f"CONSOLIDATED {keyword_base}" in line_upper_stripped or f"CONDENSED CONSOLIDATED {keyword_base}" in line_upper_stripped or \
               keyword_base == line_upper_stripped or (keyword_base.endswith("S") and keyword_base[:-1] == line_upper_stripped) or \
               (not keyword_base.endswith("S") and keyword_base + "S" == line_upper_stripped) or keyword_base in line_upper_stripped: 
                matched_primary_stmt_type = stmt_type_val
                break 
        if matched_primary_stmt_type: current_statement_type = matched_primary_stmt_type
        elif current_statement_type is None: 
            for keyword, stmt_type_val in section_start_keywords.items():
                if line_upper_stripped.startswith(keyword): current_statement_type = stmt_type_val; break
        if current_statement_type: statement_sections[current_statement_type].append(line)

    for stmt_type, stmt_lines in statement_sections.items():
        if not stmt_lines: continue
        stmt_col_headers = [global_col_header1, global_col_header2]
        if stmt_type == "CashFlowStatement":
            third_year_candidate = ""
            if global_col_header2.isdigit() and global_col_header1.isdigit():
                try:
                    year2, year1 = int(global_col_header2), int(global_col_header1)
                    if year1 > year2 : third_year_candidate = str(year2 - (year1 - year2)) 
                    else: third_year_candidate = str(year2 + (year2 - year1))
                except ValueError: pass 
            if third_year_candidate: stmt_col_headers.append(third_year_candidate)
            else: stmt_col_headers.append(f"Prior {global_col_header2}" if global_col_header2 != "Period 2" else "Prior Period 2")
        
        df = parse_one_statement_section(stmt_lines, stmt_type, stmt_col_headers)
        if df is not None and not df.empty:
            df.attrs.update({'company_name': global_company_name, 'statement_title_main': global_statement_title, 
                             'statement_type_parsed': stmt_type, 'currency_note': global_currency_note, 
                             'column_headers': [col for col in stmt_col_headers if col in df.columns] })
            all_parsed_statements[stmt_type] = df
    return all_parsed_statements

def parse_one_statement_section(stmt_lines, stmt_type, default_col_headers):
    statement_data_list = []
    current_main_category = stmt_type 
    active_section_type = "GENERAL"  
    note_regex_part = r"(?:\(?\s*(\b\d{1,2}\b(?!\d|,))\s*\)?\s*)?" 
    pat2_desc_first = re.compile(r"^(.*?)\s*" + note_regex_part + r"((?:S\s*|[\$])?[\d,().-]+)\s+((?:S\s*|[\$])?[\d,().-]+)$")
    pat3_desc_first = re.compile(r"^(.*?)\s*" + note_regex_part + r"((?:S\s*|[\$])?[\d,().-]+)\s+((?:S\s*|[\$])?[\d,().-]+)\s+((?:S\s*|[\$])?[\d,().-]+)$")
    pat_cf_val_first = re.compile(r"^((?:S\s*|[\$])?[\d,().-]+)\s+((?:S\s*|[\$])?[\d,().-]+)(?:\s+((?:S\s*|[\$])?[\d,().-]+))?\s+(.*?)\s*" + note_regex_part + r"$")
    condensed_lines, description_accumulator = [], []
    structural_keywords_patterns = [
        r"^(Current\s+)?Assets:?$", r"^(Noncurrent\s+)?Assets:?$", r"^Assets:?$",
        r"^(Current\s+)?Liabilities:?$", r"^(Noncurrent\s+)?Liabilities:?$",r"^Liabilities:?$",
        r"^(Stockholders’|Stockholders'|Shareholders'|Members')\s+Equity:?$", r"^Equity:?$",
        r"^Liabilities\s+and\s+(?:Stockholders’|Stockholders'|Shareholders'|Members')\s+Equity:?$",
        r"^Operating\s+activities:?$", r"^Investing\s+activities:?$", r"^Financing\s+activities:?$",
        r"^Revenues:?$", r"^Cost\s+of\s+sales:?$", r"^Operating\s+expenses:?$",
        r"Cash\s+flows\s+from\s+operating\s+activities:?", r"Cash\s+flows\s+from\s+investing\s+activities:?", r"Cash\s+flows\s+from\s+financing\s+activities:?",
        r"^INCOME STATEMENTS?$", r"^BALANCE SHEETS?$", r"^STATEMENTS? OF CASH FLOWS?$", r"^STATEMENTS? OF OPERATIONS?$", r"^STATEMENTS? OF EARNINGS?$", r"^STATEMENTS? OF FINANCIAL POSITION?$"
    ]
    item_like_totals_patterns = [ r"^Total\s+", r"^Net\s+(?:income|earnings|loss)", r"^Net\s+cash\s+(?:provided|used)" ]

    for raw_line in stmt_lines:
        line = raw_line.strip()
        if not line: continue 
        is_structural = any(re.match(p, line, re.IGNORECASE) for p in structural_keywords_patterns)
        is_total_item = any(re.match(p, line, re.IGNORECASE) for p in item_like_totals_patterns)
        has_trailing_values = bool(re.search(r'((?:S\s*|[\$])?[\d,().-]+)\s+((?:S\s*|[\$])?[\d,().-]+)$', line)) or \
                              bool(re.search(r'((?:S\s*|[\$])?[\d,().-]+)\s+((?:S\s*|[\$])?[\d,().-]+)\s+((?:S\s*|[\$])?[\d,().-]+)$', line))
        if is_structural and not is_total_item: 
            if description_accumulator: condensed_lines.append(" ".join(description_accumulator)); description_accumulator = []
            condensed_lines.append(line) 
        elif has_trailing_values or is_total_item: 
            full_item_text = " ".join(description_accumulator) 
            condensed_lines.append(full_item_text + " " + line if full_item_text else line)
            description_accumulator = [] 
        else: description_accumulator.append(line)
    if description_accumulator: condensed_lines.append(" ".join(description_accumulator))

    for line_to_parse in condensed_lines:
        line_lower, is_structural_line_for_context = line_to_parse.lower(), False
        for p_struct in structural_keywords_patterns:
            if re.match(p_struct, line_to_parse, re.IGNORECASE):
                is_structural_line_for_context = True
                if "assets" in line_lower: current_main_category = "Assets"
                if "current assets" in line_lower: active_section_type = "CURRENT_ASSET"
                elif "noncurrent assets" in line_lower or ("property" in line_lower and "equipment" in line_lower) or "goodwill" in line_lower or "intangible" in line_lower: active_section_type = "NONCURRENT_ASSET"
                if "liabilities and" in line_lower and ("equity" in line_lower or "stockholders" in line_lower): current_main_category = "Liabilities and Equity" 
                elif "liabilities" in line_lower: current_main_category = "Liabilities"
                if "current liabilities" in line_lower: active_section_type = "CURRENT_LIABILITY"
                elif "noncurrent liabilities" in line_lower or "long-term debt" in line_lower: active_section_type = "NONCURRENT_LIABILITY"
                if "equity" in line_lower or "stockholders" in line_lower or "shareholders" in line_lower: current_main_category = "Equity"; active_section_type = "EQUITY_ITEM"
                if "operating activities" in line_lower: current_main_category = "Operating Activities"; active_section_type = "OPERATING_ACTIVITY_ITEM"
                elif "investing activities" in line_lower: current_main_category = "Investing Activities"; active_section_type = "INVESTING_ACTIVITY_ITEM"
                elif "financing activities" in line_lower: current_main_category = "Financing Activities"; active_section_type = "FINANCING_ACTIVITY_ITEM"
                if "revenues" in line_lower and "cost" not in line_lower : current_main_category = "Revenues"; active_section_type = "REVENUE_ITEM"
                elif "cost of sales" in line_lower or "cost of goods sold" in line_lower: current_main_category = "Cost of Sales"; active_section_type = "COGS_ITEM"
                elif "operating expenses" in line_lower and "income" not in line_lower : current_main_category = "Operating Expenses"; active_section_type = "OPEX_ITEM"
                break 
        if is_structural_line_for_context and not any(re.match(p_total, line_to_parse, re.IGNORECASE) for p_total in item_like_totals_patterns): continue 

        desc_raw, note_str, v1_str, v2_str, v3_str, match_found = "", None, None, None, None, False
        m = pat3_desc_first.match(line_to_parse)
        if m: g = m.groups(); desc_raw, note_str, v1_str, v2_str, v3_str = g[0], g[1], g[2], g[3], g[4]; match_found = True
        if not match_found:
            m = pat2_desc_first.match(line_to_parse)
            if m: g = m.groups(); desc_raw, note_str, v1_str, v2_str = g[0], g[1], g[2], g[3]; v3_str = None; match_found = True
        if not match_found and stmt_type == "CashFlowStatement": 
            m = pat_cf_val_first.match(line_to_parse)
            if m: g = m.groups(); v1_str, v2_str, v3_str, desc_raw, note_str = g[0], g[1], g[2], g[3], g[4]; match_found = True
        
        if not match_found or not desc_raw: continue 
        desc = " ".join(desc_raw.split())
        if not desc : continue 

        desc_cleaned_for_check = desc.lower()
        if desc_cleaned_for_check.startswith("check ") or desc_cleaned_for_check == "check":
            continue

        cv1, cv2, cv3 = clean_value(v1_str), clean_value(v2_str), clean_value(v3_str)
        if cv1 is None and cv2 is None and (stmt_type != "CashFlowStatement" or cv3 is None) : continue 

        final_item_name, mapped_main_cat, mapped_sub_group = desc, None, None 
        map_func = None 
        if stmt_type == "BalanceSheet": map_func = map_bs_std_concept
        elif stmt_type == "IncomeStatement": map_func = map_is_std_concept
        elif stmt_type == "CashFlowStatement": map_func = map_cf_std_concept
        if map_func: final_item_name, mapped_main_cat, mapped_sub_group = map_func(desc, active_section_type)

        final_main_cat = mapped_main_cat if mapped_main_cat else current_main_category
        final_sub_cat = "" 
        if mapped_sub_group:
            final_sub_cat = mapped_sub_group.replace("_", " ").title() 
            if "Total" in mapped_sub_group or "Net" in mapped_sub_group : final_sub_cat = final_item_name 
        else: final_sub_cat = active_section_type.replace("_", " ").title() if active_section_type != "GENERAL" else ""
        
        row_data = {"Category": final_main_cat, "SubCategory": final_sub_cat, "Item": final_item_name, "Note": note_str if note_str else ""}
        data_values, actual_col_headers_for_df = [cv1, cv2, cv3], [] 
        for i, col_head_default_name in enumerate(default_col_headers):
            if i < len(data_values) and data_values[i] is not None: 
                row_data[col_head_default_name] = data_values[i]
                if col_head_default_name not in actual_col_headers_for_df: actual_col_headers_for_df.append(col_head_default_name)
            elif i < 2 : 
                 row_data[col_head_default_name] = pd.NA 
                 if col_head_default_name not in actual_col_headers_for_df: actual_col_headers_for_df.append(col_head_default_name)
        statement_data_list.append(row_data)

    if not statement_data_list: return None 
    df = pd.DataFrame(statement_data_list)
    df.attrs['column_headers_used'] = [h for h in default_col_headers if h in df.columns or h in actual_col_headers_for_df] 
    return df

def format_dataframe_for_display(df): 
    if df.empty: return pd.DataFrame() 
    col_headers_from_attrs = df.attrs.get('column_headers_used', df.attrs.get('column_headers', []))
    existing_data_cols = [col for col in col_headers_from_attrs if col in df.columns]
    display_columns_order = ['Category', 'SubCategory', 'Item', 'Note'] + existing_data_cols
    for base_col in ['Category', 'SubCategory', 'Item', 'Note']:
        if base_col not in df.columns: df[base_col] = "" if base_col == 'Note' else pd.NA 
    final_display_columns = [col for col in display_columns_order if col in df.columns]
    return df[final_display_columns].copy() 

# --- UI Functions ---
def create_alfred_screen(root, main_ui_callback):
    """Creates the initial 'Alfred' screen."""
    alfred_frame = ttk.Frame(root, padding="20")
    alfred_frame.pack(expand=True, fill=tk.BOTH)

    title_font = tkFont.Font(family="Arial", size=24, weight="bold")
    
    # Main question text
    question_label = ttk.Label(alfred_frame, text="Would you like me to clean The Data Mista Wayne?", font=title_font, wraplength=500, justify="center")
    question_label.pack(pady=20)

    # "Yes" button
    def on_yes():
        clipboard_data = ""
        try:
            clipboard_data = root.clipboard_get()
        except tk.TclError:
            messagebox.showinfo("Clipboard Empty", "Clipboard is empty or contains non-text data. Please copy data first.")
        
        alfred_frame.destroy() 
        main_ui_callback(clipboard_data) 

    yes_button = ttk.Button(alfred_frame, text="Yes, Alfred", command=on_yes, style="Accent.TButton")
    yes_button.pack(pady=20, ipady=10, ipadx=20)
    
    s = ttk.Style()
    s.configure('Accent.TButton', font=('Arial', 14, 'bold'))

    # --- Load image from Base64 string ---
    try:
        if not image_base64_string or image_base64_string.strip() == "" or "PLACEHOLDER" in image_base64_string: # Check if it's the placeholder
             raise ValueError("Base64 string is empty or still a placeholder.")
        
        image_data = base64.b64decode(image_base64_string)
        image = Image.open(BytesIO(image_data))
        
        max_height = 250 # Desired max height for the image
        img_width, img_height = image.size
        aspect_ratio = img_width / img_height
        new_height = min(img_height, max_height)
        new_width = int(new_height * aspect_ratio)
        
        image = image.resize((new_width, new_height), Image.Resampling.LANCZOS)

        photo = ImageTk.PhotoImage(image)
        image_label = ttk.Label(alfred_frame, image=photo)
        image_label.image = photo 
        image_label.pack(pady=20) # Pack the image last
    except ValueError as ve: 
        print(f"Image Error: {ve}")
        image_placeholder_fallback = tk.Frame(alfred_frame, width=200, height=200, bg="darkgrey") # Adjusted placeholder size
        image_placeholder_fallback.pack(pady=20)
        ttk.Label(image_placeholder_fallback, text="Image Error:\nPlease replace placeholder\nBase64 string in the script.", anchor="center", justify="center").pack(expand=True)
    except Exception as e:
        print(f"Error loading image from Base64: {e}")
        image_placeholder_fallback = tk.Frame(alfred_frame, width=200, height=200, bg="darkgrey") # Adjusted placeholder size
        image_placeholder_fallback.pack(pady=20)
        ttk.Label(image_placeholder_fallback, text="Image Load Error\n(Check Base64 Data)", anchor="center", justify="center").pack(expand=True)
    # --- End image loading ---


def create_main_parser_ui(root, initial_input_data=""):
    """Creates the main financial statement parser UI."""
    main_frame = ttk.Frame(root, padding="10")
    main_frame.pack(expand=True, fill=tk.BOTH)

    input_label = ttk.Label(main_frame, text="Paste Financial Statement Data Here (Balance Sheet, Income Statement, Cash Flow):")
    input_label.pack(pady=(0,5), anchor="w")
    
    input_text_widget = scrolledtext.ScrolledText(main_frame, wrap=tk.WORD, height=15, width=130, borderwidth=1, relief="solid")
    input_text_widget.pack(expand=True, fill=tk.BOTH, pady=(0,10))
    if initial_input_data:
        input_text_widget.insert("1.0", initial_input_data)
    input_text_widget.focus()

    output_text_widget = scrolledtext.ScrolledText(main_frame, wrap=tk.NONE, height=20, width=130, state=tk.DISABLED, borderwidth=1, relief="solid")
    
    process_button = ttk.Button(main_frame, text="Process Financial Statements", 
                                command=lambda: process_data_ui_logic(input_text_widget, output_text_widget))
    process_button.pack(pady=10)

    output_label = ttk.Label(main_frame, text="Parsed Statements:")
    output_label.pack(pady=(5,5), anchor="w")
    output_text_widget.pack(expand=True, fill=tk.BOTH)
    
    try: output_text_widget.configure(font=("Courier New", 9)) 
    except tk.TclError: 
        try: output_text_widget.configure(font=("monospace", 9)) 
        except tk.TclError: pass


def process_data_ui_logic(input_text_widget, output_text_widget): 
    """Handles the logic of parsing and displaying data, called by the button."""
    raw_data = input_text_widget.get("1.0", tk.END) 
    if not raw_data.strip():
        messagebox.showwarning("Input Error", "Please paste financial data.")
        return

    output_text_widget.configure(state=tk.NORMAL) 
    output_text_widget.delete("1.0", tk.END) 

    try:
        all_statements_data = parse_financial_statements(raw_data) 
        
        if not all_statements_data: 
            output_text_widget.insert(tk.END, "No financial statements could be parsed. Please check input format or debug prints in console.\n")
        else:
            first_stmt_df = next(iter(all_statements_data.values()), None)
            if first_stmt_df is not None and hasattr(first_stmt_df, 'attrs'):
                attrs = first_stmt_df.attrs
                output_text_widget.insert(tk.END, f"Company: {attrs.get('company_name', 'N/A')}\n")
                output_text_widget.insert(tk.END, f"Main Title: {attrs.get('statement_title_main', 'N/A')}\n")
                output_text_widget.insert(tk.END, f"Currency: {attrs.get('currency_note', 'N/A')}\n\n")

            for stmt_name, parsed_df in all_statements_data.items():
                output_text_widget.insert(tk.END, f"--- {stmt_name.replace('_', ' ').title()} ---\n") 
                
                col_headers = parsed_df.attrs.get('column_headers_used', parsed_df.attrs.get('column_headers', []))
                if col_headers:
                     output_text_widget.insert(tk.END, f"Periods: {' | '.join(col_headers)}\n\n")

                if parsed_df.empty: 
                    output_text_widget.insert(tk.END, f"No data rows parsed for {stmt_name}.\n\n")
                    continue
                
                formatted_df_for_print = format_dataframe_for_display(parsed_df)
                
                with pd.option_context('display.max_colwidth', None, 'display.width', 1200, 
                                       'display.colheader_justify', 'left', 'display.max_rows', None, 
                                       'display.chop_threshold', None, 'display.float_format', '{:,.0f}'.format):
                    output_text_widget.insert(tk.END, formatted_df_for_print.to_string(index=False, na_rep='')) 
                output_text_widget.insert(tk.END, "\n\n" + "="*90 + "\n\n")

                if stmt_name == "BalanceSheet":
                    date1_col_bs = col_headers[0] if len(col_headers) > 0 and col_headers[0] in parsed_df.columns else None
                    date2_col_bs = col_headers[1] if len(col_headers) > 1 and col_headers[1] in parsed_df.columns else None
                    
                    verification_output_bs = "--- Balance Sheet Verification (Assets = Liabilities + Equity) ---\n"
                    
                    get_val = lambda series, col: pd.to_numeric(series[col].iloc[0], errors='coerce') if not series.empty and col in series.columns and pd.notna(series[col].iloc[0]) else 0.0

                    total_assets_series = parsed_df[parsed_df['Item'].str.strip().str.lower() == "total assets"]
                    total_liabilities_series = parsed_df[parsed_df['Item'].str.strip().str.lower() == "total liabilities"]
                    equity_keywords = ["total equity", "total stockholders' equity", "total stockholders’ equity", "total shareholders' equity", "total shareholders’ equity"]
                    total_equity_series = parsed_df[parsed_df['Item'].str.strip().str.lower().isin(equity_keywords)]
                    
                    l_and_e_keywords = ["total liabilities and equity", "total liabilities and stockholders’ equity", "total liabilities and stockholders' equity"]
                    total_l_and_e_series = parsed_df[parsed_df['Item'].str.strip().str.lower().isin(l_and_e_keywords)]

                    assets_d1, liabilities_d1, equity_d1, l_and_e_d1 = 0.0, 0.0, 0.0, 0.0
                    assets_d2, liabilities_d2, equity_d2, l_and_e_d2 = 0.0, 0.0, 0.0, 0.0
                    found_all_components_d1, found_all_components_d2 = False, False
                    
                    if total_assets_series.empty:
                        verification_output_bs += "  - Missing 'Total Assets'\n"
                    
                    if date1_col_bs:
                        assets_d1 = get_val(total_assets_series, date1_col_bs)
                        verification_output_bs += f"For period '{date1_col_bs}':\n  Total Assets: {assets_d1:,.0f}\n"

                        if not total_l_and_e_series.empty:
                            l_and_e_d1 = get_val(total_l_and_e_series, date1_col_bs)
                            verification_output_bs += f"  Reported Total Liabilities and Equity: {l_and_e_d1:,.0f}\n"
                            diff_d1 = assets_d1 - l_and_e_d1
                            verification_output_bs += f"  Verification (Assets vs Reported L+E): {'PASSED' if abs(diff_d1) < 1.0 else f'FAILED (Diff: {diff_d1:,.2f})'}\n"
                            found_all_components_d1 = True 
                        
                        if not total_liabilities_series.empty and not total_equity_series.empty:
                            liabilities_d1 = get_val(total_liabilities_series, date1_col_bs)
                            equity_d1 = get_val(total_equity_series, date1_col_bs)
                            calc_l_plus_e_d1 = liabilities_d1 + equity_d1
                            verification_output_bs += f"  Individual - Total Liabilities: {liabilities_d1:,.0f}, Total Equity: {equity_d1:,.0f}\n  Calculated (L + E): {calc_l_plus_e_d1:,.0f}\n"
                            diff_d1_comp = assets_d1 - calc_l_plus_e_d1
                            verification_output_bs += f"  Verification (Assets vs Calculated L+E): {'PASSED' if abs(diff_d1_comp) < 1.0 else f'FAILED (Diff: {diff_d1_comp:,.2f})'}\n"
                            found_all_components_d1 = True
                        elif not found_all_components_d1 : 
                             if total_liabilities_series.empty: verification_output_bs += "  - Missing 'Total Liabilities' for component check\n"
                             if total_equity_series.empty: verification_output_bs += "  - Missing 'Total Equity' for component check\n"


                    if date2_col_bs: 
                        assets_d2 = get_val(total_assets_series, date2_col_bs)
                        verification_output_bs += f"\nFor period '{date2_col_bs}':\n  Total Assets: {assets_d2:,.0f}\n"

                        if not total_l_and_e_series.empty:
                            l_and_e_d2 = get_val(total_l_and_e_series, date2_col_bs)
                            verification_output_bs += f"  Reported Total Liabilities and Equity: {l_and_e_d2:,.0f}\n"
                            diff_d2 = assets_d2 - l_and_e_d2
                            verification_output_bs += f"  Verification (Assets vs Reported L+E): {'PASSED' if abs(diff_d2) < 1.0 else f'FAILED (Diff: {diff_d2:,.2f})'}\n"
                            found_all_components_d2 = True
                        
                        if not total_liabilities_series.empty and not total_equity_series.empty:
                            liabilities_d2 = get_val(total_liabilities_series, date2_col_bs)
                            equity_d2 = get_val(total_equity_series, date2_col_bs)
                            calc_l_plus_e_d2 = liabilities_d2 + equity_d2
                            verification_output_bs += f"  Individual - Total Liabilities: {liabilities_d2:,.0f}, Total Equity: {equity_d2:,.0f}\n  Calculated (L + E): {calc_l_plus_e_d2:,.0f}\n"
                            diff_d2_comp = assets_d2 - calc_l_plus_e_d2
                            verification_output_bs += f"  Verification (Assets vs Calculated L+E): {'PASSED' if abs(diff_d2_comp) < 1.0 else f'FAILED (Diff: {diff_d2_comp:,.2f})'}\n"
                            found_all_components_d2 = True
                        elif not found_all_components_d2:
                             if total_liabilities_series.empty: verification_output_bs += "  - Missing 'Total Liabilities' for component check\n"
                             if total_equity_series.empty: verification_output_bs += "  - Missing 'Total Equity' for component check\n"
                    
                    if total_assets_series.empty and (total_l_and_e_series.empty and (total_liabilities_series.empty or total_equity_series.empty)):
                         verification_output_bs = "--- Balance Sheet Verification (Assets = Liabilities + Equity) ---\nCould not find sufficient 'Total' lines for verification.\n"


                    output_text_widget.insert(tk.END, verification_output_bs + "\n" + "="*90 + "\n\n")

    except Exception as e:
        output_text_widget.insert(tk.END, f"\nAn error occurred during parsing or display:\n{str(e)}\n")
        import traceback
        output_text_widget.insert(tk.END, traceback.format_exc()) 
        messagebox.showerror("Processing Error", f"An error occurred: {e}")
    finally:
        output_text_widget.configure(state=tk.DISABLED) 

# --- Main Execution Block for GUI ---
if __name__ == "__main__":
    root = tk.Tk()
    root.title("Financial Statement Parser") 
    root.geometry("1100x850") 

    style = ttk.Style()
    try:
        style.theme_use('clam') 
    except tk.TclError:
        print("Clam theme not available, using default.")

    def show_main_parser_ui(clipboard_content=""):
        create_main_parser_ui(root, clipboard_content)

    create_alfred_screen(root, show_main_parser_ui) 

    root.mainloop()
